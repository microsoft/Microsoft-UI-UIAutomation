// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

import "Windows.Foundation.idl";
import "Windows.UI.UIAutomation.core.idl";
import "Windows.UI.UIAutomation.idl";

namespace Microsoft.UI.UIAutomation
{
    unsealed runtimeclass AutomationRemoteObject;

    runtimeclass AutomationRemoteAnyObject;

    runtimeclass AutomationRemoteBool : AutomationRemoteObject
    {
        void Set(AutomationRemoteBool rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteBool rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteBool rhs);

        AutomationRemoteBool BoolNot();
        AutomationRemoteBool BoolAnd(AutomationRemoteBool rhs);
        AutomationRemoteBool BoolOr(AutomationRemoteBool rhs);

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteInt : AutomationRemoteObject
    {
        void Set(AutomationRemoteInt rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteInt rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteInt rhs);
        AutomationRemoteBool IsLessThan(AutomationRemoteInt rhs);
        AutomationRemoteBool IsLessThanOrEqual(AutomationRemoteInt rhs);
        AutomationRemoteBool IsGreaterThan(AutomationRemoteInt rhs);
        AutomationRemoteBool IsGreaterThanOrEqual(AutomationRemoteInt rhs);

        void Add(AutomationRemoteInt rhs);
        void Subtract(AutomationRemoteInt rhs);
        void Multiply(AutomationRemoteInt rhs);
        void Divide(AutomationRemoteInt rhs);

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteUint : AutomationRemoteObject
    {
        void Set(AutomationRemoteUint rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteUint rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteUint rhs);
        AutomationRemoteBool IsLessThan(AutomationRemoteUint rhs);
        AutomationRemoteBool IsLessThanOrEqual(AutomationRemoteUint rhs);
        AutomationRemoteBool IsGreaterThan(AutomationRemoteUint rhs);
        AutomationRemoteBool IsGreaterThanOrEqual(AutomationRemoteUint rhs);

        void Add(AutomationRemoteUint rhs);
        void Subtract(AutomationRemoteUint rhs);
        void Multiply(AutomationRemoteUint rhs);
        void Divide(AutomationRemoteUint rhs);

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteDouble : AutomationRemoteObject
    {
        void Set(AutomationRemoteDouble rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteDouble rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteDouble rhs);
        AutomationRemoteBool IsLessThan(AutomationRemoteDouble rhs);
        AutomationRemoteBool IsLessThanOrEqual(AutomationRemoteDouble rhs);
        AutomationRemoteBool IsGreaterThan(AutomationRemoteDouble rhs);
        AutomationRemoteBool IsGreaterThanOrEqual(AutomationRemoteDouble rhs);

        void Add(AutomationRemoteDouble rhs);
        void Subtract(AutomationRemoteDouble rhs);
        void Multiply(AutomationRemoteDouble rhs);
        void Divide(AutomationRemoteDouble rhs);

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteChar : AutomationRemoteObject
    {
        void Set(AutomationRemoteChar rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteChar rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteChar rhs);
        AutomationRemoteBool IsLessThan(AutomationRemoteChar rhs);
        AutomationRemoteBool IsLessThanOrEqual(AutomationRemoteChar rhs);
        AutomationRemoteBool IsGreaterThan(AutomationRemoteChar rhs);
        AutomationRemoteBool IsGreaterThanOrEqual(AutomationRemoteChar rhs);

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteString : AutomationRemoteObject
    {
        void Set(AutomationRemoteString rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteString rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteString rhs);

        AutomationRemoteChar GetAt(AutomationRemoteUint index);
        AutomationRemoteString Substr(AutomationRemoteUint index, AutomationRemoteUint length);
        AutomationRemoteString Concat(AutomationRemoteString other);

        AutomationRemoteUint Size();

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemotePoint : AutomationRemoteObject
    {
        void Set(AutomationRemotePoint rhs);
        AutomationRemoteBool IsEqual(AutomationRemotePoint rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemotePoint rhs);

        AutomationRemoteDouble GetX();
        AutomationRemoteDouble GetY();

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteRect : AutomationRemoteObject
    {
        void Set(AutomationRemoteRect rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteRect rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteRect rhs);

        AutomationRemoteDouble GetHeight();
        AutomationRemoteDouble GetWidth();
        AutomationRemoteDouble GetX();
        AutomationRemoteDouble GetY();

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteGuid : AutomationRemoteObject
    {
        void Set(AutomationRemoteGuid rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteGuid rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteGuid rhs);

        AutomationRemoteAnnotationType LookupAnnotationType();
        AutomationRemotePropertyId LookupPropertyId();
    }

    unsealed runtimeclass AutomationRemoteExtensionTarget : AutomationRemoteObject
    {
        AutomationRemoteBool IsExtensionTarget();
        void CallExtension(AutomationRemoteGuid extensionId, AutomationRemoteObject[] operands);
        AutomationRemoteBool IsExtensionSupported(AutomationRemoteGuid extensionId);
    }

    runtimeclass AutomationRemoteArray : AutomationRemoteObject
    {
        void Set(AutomationRemoteArray rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteArray rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteArray rhs);

        void Append(AutomationRemoteObject obj);
        void SetAt(AutomationRemoteUint index, AutomationRemoteObject obj);
        AutomationRemoteAnyObject RemoveAt(AutomationRemoteUint index);

        AutomationRemoteAnyObject GetAt(AutomationRemoteUint index);

        AutomationRemoteUint Size();

        AutomationRemoteString Stringify();
    }

    runtimeclass AutomationRemoteStringMap : AutomationRemoteObject
    {
        void Set(AutomationRemoteStringMap rhs);

        void Insert(AutomationRemoteString key, AutomationRemoteObject val);
        AutomationRemoteAnyObject Remove(AutomationRemoteString key);

        AutomationRemoteBool HasKey(AutomationRemoteString key);
        AutomationRemoteAnyObject Lookup(AutomationRemoteString key);

        AutomationRemoteUint Size();
    };

    runtimeclass AutomationRemoteByteArray : AutomationRemoteObject
    {
        void Set(AutomationRemoteByteArray rhs);
    };

    struct AutomationRemoteOperationResponseToken
    {
        Int32 Value;
    };

    runtimeclass AutomationRemoteOperationResultSet
    {
        // The following method is deprecated.
        // Use Status or ExtendedError instead.
        HRESULT OperationStatus{ get; };
        Windows.UI.UIAutomation.Core.AutomationRemoteOperationStatus Status{ get; };
        HRESULT ExtendedError{ get; };
        Boolean HasResult(AutomationRemoteOperationResponseToken token);
        IInspectable GetResult(AutomationRemoteOperationResponseToken token);
    }

    delegate void AutomationRemoteOperationScopeHandler();

    runtimeclass AutomationRemotePropertyId;
    runtimeclass AutomationRemotePatternId;

    runtimeclass AutomationRemoteCacheRequest : AutomationRemoteObject
    {
        void Set(AutomationRemoteCacheRequest rhs);
        void AddProperty(AutomationRemotePropertyId propertyId);
        void AddPattern(AutomationRemotePatternId patternId);
    }

    partial runtimeclass AutomationRemoteElement : AutomationRemoteExtensionTarget
    {
        void Set(AutomationRemoteElement rhs);

        [default_overload] AutomationRemoteAnyObject GetPropertyValue(AutomationRemotePropertyId propertyId);
        AutomationRemoteAnyObject GetPropertyValue(AutomationRemotePropertyId propertyId, AutomationRemoteBool ignoreDefaultValue);

        AutomationRemoteAnyObject GetMetadataValue(AutomationRemotePropertyId propertyId, AutomationRemoteMetadata metadata);

        AutomationRemoteElement GetUpdatedCacheElement(AutomationRemoteCacheRequest cacheRequest);
        AutomationRemoteElement GetParentElement();
        AutomationRemoteElement GetFirstChildElement();
        AutomationRemoteElement GetLastChildElement();
        AutomationRemoteElement GetNextSiblingElement();
        AutomationRemoteElement GetPreviousSiblingElement();

        void PopulateCache(AutomationRemoteCacheRequest cacheRequest);
    }

    unsealed runtimeclass AutomationRemoteObject
    {
        AutomationRemoteBool IsNull();
    }

    partial runtimeclass AutomationRemoteAnyObject : AutomationRemoteObject
    {
        AutomationRemoteBool IsNotSupported();
        AutomationRemoteBool IsMixedAttribute();
        AutomationRemoteBool IsBool();
        AutomationRemoteBool AsBool();
        AutomationRemoteBool IsInt();
        AutomationRemoteInt AsInt();
        AutomationRemoteBool IsUint();
        AutomationRemoteUint AsUint();
        AutomationRemoteBool IsDouble();
        AutomationRemoteDouble AsDouble();
        AutomationRemoteBool IsChar();
        AutomationRemoteChar AsChar();
        AutomationRemoteBool IsString();
        AutomationRemoteString AsString();
        AutomationRemoteBool IsPoint();
        AutomationRemotePoint AsPoint();
        AutomationRemoteBool IsRect();
        AutomationRemoteRect AsRect();
        AutomationRemoteBool IsGuid();
        AutomationRemoteGuid AsGuid();
        AutomationRemoteBool IsArray();
        AutomationRemoteArray AsArray();
        AutomationRemoteBool IsStringMap();
        AutomationRemoteStringMap AsStringMap();
        AutomationRemoteBool IsElement();
        AutomationRemoteElement AsElement();
        AutomationRemoteBool IsCacheRequest();
        AutomationRemoteCacheRequest AsCacheRequest();
        AutomationRemoteBool IsByteArray();
        AutomationRemoteByteArray AsByteArray();
    }

    enum AutomationActiveEnd
    {
        None = 0,
        Start = 1,
        End = 2,
    };

    runtimeclass AutomationRemoteActiveEnd : AutomationRemoteObject
    {
        void Set(AutomationRemoteActiveEnd rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteActiveEnd rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteActiveEnd rhs);
    };

    enum AutomationAnimationStyle
    {
        None = 0,
        LasVegasLights = 1,
        BlinkingBackground = 2,
        SparkleText = 3,
        MarchingBlackAnts = 4,
        MarchingRedAnts = 5,
        Shimmer = 6,
        Other = -1,
    };

    runtimeclass AutomationRemoteAnimationStyle : AutomationRemoteObject
    {
        void Set(AutomationRemoteAnimationStyle rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteAnimationStyle rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteAnimationStyle rhs);
    };

    enum AutomationAnnotationType
    {
        Unknown = 60000,
        SpellingError = 60001,
        GrammarError = 60002,
        Comment = 60003,
        FormulaError = 60004,
        TrackChanges = 60005,
        Header = 60006,
        Footer = 60007,
        Highlighted = 60008,
        Endnote = 60009,
        Footnote = 60010,
        InsertionChange = 60011,
        DeletionChange = 60012,
        MoveChange = 60013,
        FormatChange = 60014,
        UnsyncedChange = 60015,
        EditingLockedChange = 60016,
        ExternalChange = 60017,
        ConflictingChange = 60018,
        Author = 60019,
        AdvancedProofingIssue = 60020,
        DataValidationError = 60021,
        CircularReferenceError = 60022,
        Mathematics = 60023,
        Sensitive = 60024,
    };

    runtimeclass AutomationRemoteAnnotationType : AutomationRemoteObject
    {
        void Set(AutomationRemoteAnnotationType rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteAnnotationType rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteAnnotationType rhs);
        AutomationRemoteGuid LookupGuid();
    };

    enum AutomationBulletStyle
    {
        None = 0,
        HollowRoundBullet = 1,
        FilledRoundBullet = 2,
        HollowSquareBullet = 3,
        FilledSquareBullet = 4,
        DashBullet = 5,
        Other = -1,
    };

    runtimeclass AutomationRemoteBulletStyle : AutomationRemoteObject
    {
        void Set(AutomationRemoteBulletStyle rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteBulletStyle rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteBulletStyle rhs);
    };

    enum AutomationCapStyle
    {
        None = 0,
        SmallCap = 1,
        AllCap = 2,
        AllPetiteCaps = 3,
        PetiteCaps = 4,
        Unicase = 5,
        Titling = 6,
        Other = -1,
    };

    runtimeclass AutomationRemoteCapStyle : AutomationRemoteObject
    {
        void Set(AutomationRemoteCapStyle rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteCapStyle rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteCapStyle rhs);
    };

    enum AutomationCaretBidiMode
    {
        LTR = 0,
        RTL = 1,
    };

    runtimeclass AutomationRemoteCaretBidiMode : AutomationRemoteObject
    {
        void Set(AutomationRemoteCaretBidiMode rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteCaretBidiMode rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteCaretBidiMode rhs);
    };

    enum AutomationCaretPosition
    {
        Unknown = 0,
        EndOfLine = 1,
        BeginningOfLine = 2,
    };

    runtimeclass AutomationRemoteCaretPosition : AutomationRemoteObject
    {
        void Set(AutomationRemoteCaretPosition rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteCaretPosition rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteCaretPosition rhs);
    };

    enum AutomationControlType
    {
        Button = 50000,
        Calendar = 50001,
        CheckBox = 50002,
        ComboBox = 50003,
        Edit = 50004,
        Hyperlink = 50005,
        Image = 50006,
        ListItem = 50007,
        List = 50008,
        Menu = 50009,
        MenuBar = 50010,
        MenuItem = 50011,
        ProgressBar = 50012,
        RadioButton = 50013,
        ScrollBar = 50014,
        Slider = 50015,
        Spinner = 50016,
        StatusBar = 50017,
        Tab = 50018,
        TabItem = 50019,
        Text = 50020,
        ToolBar = 50021,
        ToolTip = 50022,
        Tree = 50023,
        TreeItem = 50024,
        Custom = 50025,
        Group = 50026,
        Thumb = 50027,
        DataGrid = 50028,
        DataItem = 50029,
        Document = 50030,
        SplitButton = 50031,
        Window = 50032,
        Pane = 50033,
        Header = 50034,
        HeaderItem = 50035,
        Table = 50036,
        TitleBar = 50037,
        Separator = 50038,
        SemanticZoom = 50039,
        AppBar = 50040,
    };

    runtimeclass AutomationRemoteControlType : AutomationRemoteObject
    {
        void Set(AutomationRemoteControlType rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteControlType rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteControlType rhs);
    };

    enum AutomationDockPosition
    {
        Top = 0,
        Left = 1,
        Bottom = 2,
        Right = 3,
        Fill = 4,
        None = 5,
    };

    runtimeclass AutomationRemoteDockPosition : AutomationRemoteObject
    {
        void Set(AutomationRemoteDockPosition rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteDockPosition rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteDockPosition rhs);
    };

    enum AutomationExpandCollapseState
    {
        Collapsed = 0,
        Expanded = 1,
        PartiallyExpanded = 2,
        LeafNode = 3,
    };

    runtimeclass AutomationRemoteExpandCollapseState : AutomationRemoteObject
    {
        void Set(AutomationRemoteExpandCollapseState rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteExpandCollapseState rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteExpandCollapseState rhs);
    };

    enum AutomationFlowDirections
    {
        Default = 0,
        RightToLeft = 1,
        BottomToTop = 2,
        Vertical = 4,
    };

    runtimeclass AutomationRemoteFlowDirections : AutomationRemoteObject
    {
        void Set(AutomationRemoteFlowDirections rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteFlowDirections rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteFlowDirections rhs);
    };

    enum AutomationHeadingLevel
    {
        None = 80050,
        Level1 = 80051,
        Level2 = 80052,
        Level3 = 80053,
        Level4 = 80054,
        Level5 = 80055,
        Level6 = 80056,
        Level7 = 80057,
        Level8 = 80058,
        Level9 = 80059,
    };

    runtimeclass AutomationRemoteHeadingLevel : AutomationRemoteObject
    {
        void Set(AutomationRemoteHeadingLevel rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteHeadingLevel rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteHeadingLevel rhs);
    };

    enum AutomationHorizontalTextAlignment
    {
        Left = 0,
        Centered = 1,
        Right = 2,
        Justified = 3,
    };

    runtimeclass AutomationRemoteHorizontalTextAlignment : AutomationRemoteObject
    {
        void Set(AutomationRemoteHorizontalTextAlignment rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteHorizontalTextAlignment rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteHorizontalTextAlignment rhs);
    };

    enum AutomationLandmarkType
    {
        Custom = 80000,
        Form = 80001,
        Main = 80002,
        Navigation = 80003,
        Search = 80004,
    };

    runtimeclass AutomationRemoteLandmarkType : AutomationRemoteObject
    {
        void Set(AutomationRemoteLandmarkType rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteLandmarkType rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteLandmarkType rhs);
    };

    enum AutomationLiveSetting
    {
        Off = 0,
        Polite = 1,
        Assertive = 2,
    };

    runtimeclass AutomationRemoteLiveSetting : AutomationRemoteObject
    {
        void Set(AutomationRemoteLiveSetting rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteLiveSetting rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteLiveSetting rhs);
    };

    enum AutomationMetadata
    {
        SayAsInterpretAs = 100000,
    };

    runtimeclass AutomationRemoteMetadata : AutomationRemoteObject
    {
        void Set(AutomationRemoteMetadata rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteMetadata rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteMetadata rhs);
    };

    enum AutomationNavigateDirection
    {
        Parent = 0,
        NextSibling = 1,
        PreviousSibling = 2,
        FirstChild = 3,
        LastChild = 4,
    };

    runtimeclass AutomationRemoteNavigateDirection : AutomationRemoteObject
    {
        void Set(AutomationRemoteNavigateDirection rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteNavigateDirection rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteNavigateDirection rhs);
    };

    enum AutomationOrientationType
    {
        None = 0,
        Horizontal = 1,
        Vertical = 2,
    };

    runtimeclass AutomationRemoteOrientationType : AutomationRemoteObject
    {
        void Set(AutomationRemoteOrientationType rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteOrientationType rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteOrientationType rhs);
    };

    enum AutomationOutlineStyles
    {
        None = 0,
        Outline = 1,
        Shadow = 2,
        Engraved = 4,
        Embossed = 8,
    };

    runtimeclass AutomationRemoteOutlineStyles : AutomationRemoteObject
    {
        void Set(AutomationRemoteOutlineStyles rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteOutlineStyles rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteOutlineStyles rhs);
    };

    enum AutomationPatternId
    {
        Invoke = 10000,
        Selection = 10001,
        Value = 10002,
        RangeValue = 10003,
        Scroll = 10004,
        ExpandCollapse = 10005,
        Grid = 10006,
        GridItem = 10007,
        MultipleView = 10008,
        Window = 10009,
        SelectionItem = 10010,
        Dock = 10011,
        Table = 10012,
        TableItem = 10013,
        Text = 10014,
        Toggle = 10015,
        Transform = 10016,
        ScrollItem = 10017,
        LegacyIAccessible = 10018,
        ItemContainer = 10019,
        VirtualizedItem = 10020,
        SynchronizedInput = 10021,
        ObjectModel = 10022,
        Annotation = 10023,
        Text2 = 10024,
        Styles = 10025,
        Spreadsheet = 10026,
        SpreadsheetItem = 10027,
        Transform2 = 10028,
        TextChild = 10029,
        Drag = 10030,
        DropTarget = 10031,
        TextEdit = 10032,
        CustomNavigation = 10033,
        Selection2 = 10034,
    };

    runtimeclass AutomationRemotePatternId : AutomationRemoteObject
    {
        void Set(AutomationRemotePatternId rhs);
        AutomationRemoteBool IsEqual(AutomationRemotePatternId rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemotePatternId rhs);
    };

    enum AutomationPropertyId
    {
        RuntimeId = 30000,
        BoundingRectangle = 30001,
        ProcessId = 30002,
        ControlType = 30003,
        LocalizedControlType = 30004,
        Name = 30005,
        AcceleratorKey = 30006,
        AccessKey = 30007,
        HasKeyboardFocus = 30008,
        IsKeyboardFocusable = 30009,
        IsEnabled = 30010,
        AutomationId = 30011,
        ClassName = 30012,
        HelpText = 30013,
        ClickablePoint = 30014,
        Culture = 30015,
        IsControlElement = 30016,
        IsContentElement = 30017,
        LabeledBy = 30018,
        IsPassword = 30019,
        NativeWindowHandle = 30020,
        ItemType = 30021,
        IsOffscreen = 30022,
        Orientation = 30023,
        FrameworkId = 30024,
        IsRequiredForForm = 30025,
        ItemStatus = 30026,
        IsDockPatternAvailable = 30027,
        IsExpandCollapsePatternAvailable = 30028,
        IsGridItemPatternAvailable = 30029,
        IsGridPatternAvailable = 30030,
        IsInvokePatternAvailable = 30031,
        IsMultipleViewPatternAvailable = 30032,
        IsRangeValuePatternAvailable = 30033,
        IsScrollPatternAvailable = 30034,
        IsScrollItemPatternAvailable = 30035,
        IsSelectionItemPatternAvailable = 30036,
        IsSelectionPatternAvailable = 30037,
        IsTablePatternAvailable = 30038,
        IsTableItemPatternAvailable = 30039,
        IsTextPatternAvailable = 30040,
        IsTogglePatternAvailable = 30041,
        IsTransformPatternAvailable = 30042,
        IsValuePatternAvailable = 30043,
        IsWindowPatternAvailable = 30044,
        ValueValue = 30045,
        ValueIsReadOnly = 30046,
        RangeValueValue = 30047,
        RangeValueIsReadOnly = 30048,
        RangeValueMinimum = 30049,
        RangeValueMaximum = 30050,
        RangeValueLargeChange = 30051,
        RangeValueSmallChange = 30052,
        ScrollHorizontalScrollPercent = 30053,
        ScrollHorizontalViewSize = 30054,
        ScrollVerticalScrollPercent = 30055,
        ScrollVerticalViewSize = 30056,
        ScrollHorizontallyScrollable = 30057,
        ScrollVerticallyScrollable = 30058,
        SelectionSelection = 30059,
        SelectionCanSelectMultiple = 30060,
        SelectionIsSelectionRequired = 30061,
        GridRowCount = 30062,
        GridColumnCount = 30063,
        GridItemRow = 30064,
        GridItemColumn = 30065,
        GridItemRowSpan = 30066,
        GridItemColumnSpan = 30067,
        GridItemContainingGrid = 30068,
        DockDockPosition = 30069,
        ExpandCollapseExpandCollapseState = 30070,
        MultipleViewCurrentView = 30071,
        MultipleViewSupportedViews = 30072,
        WindowCanMaximize = 30073,
        WindowCanMinimize = 30074,
        WindowWindowVisualState = 30075,
        WindowWindowInteractionState = 30076,
        WindowIsModal = 30077,
        WindowIsTopmost = 30078,
        SelectionItemIsSelected = 30079,
        SelectionItemSelectionContainer = 30080,
        TableRowHeaders = 30081,
        TableColumnHeaders = 30082,
        TableRowOrColumnMajor = 30083,
        TableItemRowHeaderItems = 30084,
        TableItemColumnHeaderItems = 30085,
        ToggleToggleState = 30086,
        TransformCanMove = 30087,
        TransformCanResize = 30088,
        TransformCanRotate = 30089,
        IsLegacyIAccessiblePatternAvailable = 30090,
        LegacyIAccessibleChildId = 30091,
        LegacyIAccessibleName = 30092,
        LegacyIAccessibleValue = 30093,
        LegacyIAccessibleDescription = 30094,
        LegacyIAccessibleRole = 30095,
        LegacyIAccessibleState = 30096,
        LegacyIAccessibleHelp = 30097,
        LegacyIAccessibleKeyboardShortcut = 30098,
        LegacyIAccessibleSelection = 30099,
        LegacyIAccessibleDefaultAction = 30100,
        AriaRole = 30101,
        AriaProperties = 30102,
        IsDataValidForForm = 30103,
        ControllerFor = 30104,
        DescribedBy = 30105,
        FlowsTo = 30106,
        ProviderDescription = 30107,
        IsItemContainerPatternAvailable = 30108,
        IsVirtualizedItemPatternAvailable = 30109,
        IsSynchronizedInputPatternAvailable = 30110,
        OptimizeForVisualContent = 30111,
        IsObjectModelPatternAvailable = 30112,
        AnnotationAnnotationTypeId = 30113,
        AnnotationAnnotationTypeName = 30114,
        AnnotationAuthor = 30115,
        AnnotationDateTime = 30116,
        AnnotationTarget = 30117,
        IsAnnotationPatternAvailable = 30118,
        IsTextPattern2Available = 30119,
        StylesStyleId = 30120,
        StylesStyleName = 30121,
        StylesFillColor = 30122,
        StylesFillPatternStyle = 30123,
        StylesShape = 30124,
        StylesFillPatternColor = 30125,
        StylesExtendedProperties = 30126,
        IsStylesPatternAvailable = 30127,
        IsSpreadsheetPatternAvailable = 30128,
        SpreadsheetItemFormula = 30129,
        SpreadsheetItemAnnotationObjects = 30130,
        SpreadsheetItemAnnotationTypes = 30131,
        IsSpreadsheetItemPatternAvailable = 30132,
        Transform2CanZoom = 30133,
        IsTransformPattern2Available = 30134,
        LiveSetting = 30135,
        IsTextChildPatternAvailable = 30136,
        IsDragPatternAvailable = 30137,
        DragIsGrabbed = 30138,
        DragDropEffect = 30139,
        DragDropEffects = 30140,
        IsDropTargetPatternAvailable = 30141,
        DropTargetDropTargetEffect = 30142,
        DropTargetDropTargetEffects = 30143,
        DragGrabbedItems = 30144,
        Transform2ZoomLevel = 30145,
        Transform2ZoomMinimum = 30146,
        Transform2ZoomMaximum = 30147,
        FlowsFrom = 30148,
        IsTextEditPatternAvailable = 30149,
        IsPeripheral = 30150,
        IsCustomNavigationPatternAvailable = 30151,
        PositionInSet = 30152,
        SizeOfSet = 30153,
        Level = 30154,
        AnnotationTypes = 30155,
        AnnotationObjects = 30156,
        LandmarkType = 30157,
        LocalizedLandmarkType = 30158,
        FullDescription = 30159,
        FillColor = 30160,
        OutlineColor = 30161,
        FillType = 30162,
        VisualEffects = 30163,
        OutlineThickness = 30164,
        CenterPoint = 30165,
        Rotation = 30166,
        Size = 30167,
        IsSelectionPattern2Available = 30168,
        Selection2FirstSelectedItem = 30169,
        Selection2LastSelectedItem = 30170,
        Selection2CurrentSelectedItem = 30171,
        Selection2ItemCount = 30172,
        HeadingLevel = 30173,
        IsDialog = 30174,
    };

    runtimeclass AutomationRemotePropertyId : AutomationRemoteObject
    {
        void Set(AutomationRemotePropertyId rhs);
        AutomationRemoteBool IsEqual(AutomationRemotePropertyId rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemotePropertyId rhs);
        AutomationRemoteGuid LookupGuid();
    };

    enum AutomationRowOrColumnMajor
    {
        RowMajor = 0,
        ColumnMajor = 1,
        Indeterminate = 2,
    };

    runtimeclass AutomationRemoteRowOrColumnMajor : AutomationRemoteObject
    {
        void Set(AutomationRemoteRowOrColumnMajor rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteRowOrColumnMajor rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteRowOrColumnMajor rhs);
    };

    enum AutomationSayAsInterpretAs
    {
        None = 0,
        Spell = 1,
        Cardinal = 2,
        Ordinal = 3,
        Number = 4,
        Date = 5,
        Time = 6,
        Telephone = 7,
        Currency = 8,
        Net = 9,
        Url = 10,
        Address = 11,
        Alphanumeric = 12,
        Name = 13,
        Media = 14,
        Date_MonthDayYear = 15,
        Date_DayMonthYear = 16,
        Date_YearMonthDay = 17,
        Date_YearMonth = 18,
        Date_MonthYear = 19,
        Date_DayMonth = 20,
        Date_MonthDay = 21,
        Date_Year = 22,
        Time_HoursMinutesSeconds12 = 23,
        Time_HoursMinutes12 = 24,
        Time_HoursMinutesSeconds24 = 25,
        Time_HoursMinutes24 = 26,
    };

    runtimeclass AutomationRemoteSayAsInterpretAs : AutomationRemoteObject
    {
        void Set(AutomationRemoteSayAsInterpretAs rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteSayAsInterpretAs rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteSayAsInterpretAs rhs);
    };

    enum AutomationScrollAmount
    {
        LargeDecrement = 0,
        SmallDecrement = 1,
        NoAmount = 2,
        LargeIncrement = 3,
        SmallIncrement = 4,
    };

    runtimeclass AutomationRemoteScrollAmount : AutomationRemoteObject
    {
        void Set(AutomationRemoteScrollAmount rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteScrollAmount rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteScrollAmount rhs);
    };

    enum AutomationStyleId
    {
        Custom = 70000,
        Heading1 = 70001,
        Heading2 = 70002,
        Heading3 = 70003,
        Heading4 = 70004,
        Heading5 = 70005,
        Heading6 = 70006,
        Heading7 = 70007,
        Heading8 = 70008,
        Heading9 = 70009,
        Title = 70010,
        Subtitle = 70011,
        Normal = 70012,
        Emphasis = 70013,
        Quote = 70014,
        BulletedList = 70015,
        NumberedList = 70016,
    };

    runtimeclass AutomationRemoteStyleId : AutomationRemoteObject
    {
        void Set(AutomationRemoteStyleId rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteStyleId rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteStyleId rhs);
    };

    enum AutomationSupportedTextSelection
    {
        None = 0,
        Single = 1,
        Multiple = 2,
    };

    runtimeclass AutomationRemoteSupportedTextSelection : AutomationRemoteObject
    {
        void Set(AutomationRemoteSupportedTextSelection rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteSupportedTextSelection rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteSupportedTextSelection rhs);
    };

    enum AutomationSynchronizedInputType
    {
        KeyUp = 1,
        KeyDown = 2,
        LeftMouseUp = 4,
        LeftMouseDown = 8,
        RightMouseUp = 16,
        RightMouseDown = 32,
    };

    runtimeclass AutomationRemoteSynchronizedInputType : AutomationRemoteObject
    {
        void Set(AutomationRemoteSynchronizedInputType rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteSynchronizedInputType rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteSynchronizedInputType rhs);
    };

    enum AutomationTextAttributeId
    {
        AnimationStyle = 40000,
        BackgroundColor = 40001,
        BulletStyle = 40002,
        CapStyle = 40003,
        Culture = 40004,
        FontName = 40005,
        FontSize = 40006,
        FontWeight = 40007,
        ForegroundColor = 40008,
        HorizontalTextAlignment = 40009,
        IndentationFirstLine = 40010,
        IndentationLeading = 40011,
        IndentationTrailing = 40012,
        IsHidden = 40013,
        IsItalic = 40014,
        IsReadOnly = 40015,
        IsSubscript = 40016,
        IsSuperscript = 40017,
        MarginBottom = 40018,
        MarginLeading = 40019,
        MarginTop = 40020,
        MarginTrailing = 40021,
        OutlineStyles = 40022,
        OverlineColor = 40023,
        OverlineStyle = 40024,
        StrikethroughColor = 40025,
        StrikethroughStyle = 40026,
        Tabs = 40027,
        TextFlowDirections = 40028,
        UnderlineColor = 40029,
        UnderlineStyle = 40030,
        AnnotationTypes = 40031,
        AnnotationObjects = 40032,
        StyleName = 40033,
        StyleId = 40034,
        Link = 40035,
        IsActive = 40036,
        SelectionActiveEnd = 40037,
        CaretPosition = 40038,
        CaretBidiMode = 40039,
        LineSpacing = 40040,
        BeforeParagraphSpacing = 40041,
        AfterParagraphSpacing = 40042,
        SayAsInterpretAs = 40043,
    };

    runtimeclass AutomationRemoteTextAttributeId : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextAttributeId rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteTextAttributeId rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteTextAttributeId rhs);
    };

    enum AutomationTextDecorationLineStyle
    {
        None = 0,
        Single = 1,
        WordsOnly = 2,
        Double = 3,
        Dot = 4,
        Dash = 5,
        DashDot = 6,
        DashDotDot = 7,
        Wavy = 8,
        ThickSingle = 9,
        DoubleWavy = 11,
        ThickWavy = 12,
        LongDash = 13,
        ThickDash = 14,
        ThickDashDot = 15,
        ThickDashDotDot = 16,
        ThickDot = 17,
        ThickLongDash = 18,
        Other = -1,
    };

    runtimeclass AutomationRemoteTextDecorationLineStyle : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextDecorationLineStyle rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteTextDecorationLineStyle rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteTextDecorationLineStyle rhs);
    };

    enum AutomationTextPatternRangeEndpoint
    {
        Start = 0,
        End = 1,
    };

    runtimeclass AutomationRemoteTextPatternRangeEndpoint : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextPatternRangeEndpoint rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteTextPatternRangeEndpoint rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteTextPatternRangeEndpoint rhs);
    };

    enum AutomationTextUnit
    {
        Character = 0,
        Format = 1,
        Word = 2,
        Line = 3,
        Paragraph = 4,
        Page = 5,
        Document = 6,
    };

    runtimeclass AutomationRemoteTextUnit : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextUnit rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteTextUnit rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteTextUnit rhs);
    };

    enum AutomationToggleState
    {
        Off = 0,
        On = 1,
        Indeterminate = 2,
    };

    runtimeclass AutomationRemoteToggleState : AutomationRemoteObject
    {
        void Set(AutomationRemoteToggleState rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteToggleState rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteToggleState rhs);
    };

    enum AutomationWindowInteractionState
    {
        Running = 0,
        Closing = 1,
        ReadyForUserInteraction = 2,
        BlockedByModalWindow = 3,
        NotResponding = 4,
    };

    runtimeclass AutomationRemoteWindowInteractionState : AutomationRemoteObject
    {
        void Set(AutomationRemoteWindowInteractionState rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteWindowInteractionState rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteWindowInteractionState rhs);
    };

    enum AutomationWindowVisualState
    {
        Normal = 0,
        Maximized = 1,
        Minimized = 2,
    };

    runtimeclass AutomationRemoteWindowVisualState : AutomationRemoteObject
    {
        void Set(AutomationRemoteWindowVisualState rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteWindowVisualState rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteWindowVisualState rhs);
    };

    enum AutomationZoomUnit
    {
        NoAmount = 0,
        LargeDecrement = 1,
        SmallDecrement = 2,
        LargeIncrement = 3,
        SmallIncrement = 4,
    };

    runtimeclass AutomationRemoteZoomUnit : AutomationRemoteObject
    {
        void Set(AutomationRemoteZoomUnit rhs);
        AutomationRemoteBool IsEqual(AutomationRemoteZoomUnit rhs);
        AutomationRemoteBool IsNotEqual(AutomationRemoteZoomUnit rhs);
    };

    runtimeclass AutomationRemoteInvokePattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteInvokePattern rhs);
        void Invoke();
    };

    runtimeclass AutomationRemoteSelectionPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteSelectionPattern rhs);
        AutomationRemoteArray GetSelection();
        AutomationRemoteBool GetCanSelectMultiple();
        AutomationRemoteBool GetIsSelectionRequired();
    };

    runtimeclass AutomationRemoteValuePattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteValuePattern rhs);
        AutomationRemoteString GetValue();
        AutomationRemoteBool GetIsReadOnly();
        void SetValue(AutomationRemoteString val);
    };

    runtimeclass AutomationRemoteRangeValuePattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteRangeValuePattern rhs);
        AutomationRemoteDouble GetValue();
        AutomationRemoteBool GetIsReadOnly();
        AutomationRemoteDouble GetMaximum();
        AutomationRemoteDouble GetMinimum();
        AutomationRemoteDouble GetLargeChange();
        AutomationRemoteDouble GetSmallChange();
        void SetValue(AutomationRemoteDouble val);
    };

    runtimeclass AutomationRemoteScrollPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteScrollPattern rhs);
        AutomationRemoteDouble GetHorizontalScrollPercent();
        AutomationRemoteDouble GetVerticalScrollPercent();
        AutomationRemoteDouble GetHorizontalViewSize();
        AutomationRemoteDouble GetVerticalViewSize();
        AutomationRemoteBool GetHorizontallyScrollable();
        AutomationRemoteBool GetVerticallyScrollable();
        void Scroll(AutomationRemoteScrollAmount horizontalAmount, AutomationRemoteScrollAmount verticalAmount);
        void SetScrollPercent(AutomationRemoteDouble horizontalPercent, AutomationRemoteDouble verticalPercent);
    };

    runtimeclass AutomationRemoteExpandCollapsePattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteExpandCollapsePattern rhs);
        AutomationRemoteExpandCollapseState GetExpandCollapseState();
        void Expand();
        void Collapse();
    };

    runtimeclass AutomationRemoteGridPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteGridPattern rhs);
        AutomationRemoteInt GetRowCount();
        AutomationRemoteInt GetColumnCount();
        AutomationRemoteElement GetItem(AutomationRemoteInt row, AutomationRemoteInt column);
    };

    runtimeclass AutomationRemoteGridItemPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteGridItemPattern rhs);
        AutomationRemoteElement GetContainingGrid();
        AutomationRemoteInt GetRow();
        AutomationRemoteInt GetColumn();
        AutomationRemoteInt GetRowSpan();
        AutomationRemoteInt GetColumnSpan();
    };

    runtimeclass AutomationRemoteMultipleViewPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteMultipleViewPattern rhs);
        AutomationRemoteInt GetCurrentView();
        AutomationRemoteArray GetSupportedViews();
        AutomationRemoteString GetViewName(AutomationRemoteInt view);
        void SetCurrentView(AutomationRemoteInt view);
    };

    runtimeclass AutomationRemoteWindowPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteWindowPattern rhs);
        AutomationRemoteBool GetCanMaximize();
        AutomationRemoteBool GetCanMinimize();
        AutomationRemoteBool GetIsModal();
        AutomationRemoteBool GetIsTopmost();
        AutomationRemoteWindowVisualState GetWindowVisualState();
        AutomationRemoteWindowInteractionState GetWindowInteractionState();
        void Close();
        AutomationRemoteBool WaitForInputIdle(AutomationRemoteInt milliseconds);
        void SetWindowVisualState(AutomationRemoteWindowVisualState state);
    };

    runtimeclass AutomationRemoteSelectionItemPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteSelectionItemPattern rhs);
        AutomationRemoteBool GetIsSelected();
        AutomationRemoteElement GetSelectionContainer();
        void Select();
        void AddToSelection();
        void RemoveFromSelection();
    };

    runtimeclass AutomationRemoteDockPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteDockPattern rhs);
        AutomationRemoteDockPosition GetDockPosition();
        void SetDockPosition(AutomationRemoteDockPosition dockPos);
    };

    runtimeclass AutomationRemoteTablePattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteTablePattern rhs);
        AutomationRemoteArray GetRowHeaders();
        AutomationRemoteArray GetColumnHeaders();
        AutomationRemoteRowOrColumnMajor GetRowOrColumnMajor();
    };

    runtimeclass AutomationRemoteTableItemPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteTableItemPattern rhs);
        AutomationRemoteArray GetRowHeaderItems();
        AutomationRemoteArray GetColumnHeaderItems();
    };

    runtimeclass AutomationRemoteTextRange : AutomationRemoteExtensionTarget
    {
        void Set(AutomationRemoteTextRange rhs);
        AutomationRemoteTextRange Clone();
        AutomationRemoteBool Compare(AutomationRemoteTextRange range);
        AutomationRemoteInt CompareEndpoints(AutomationRemoteTextPatternRangeEndpoint srcEndPoint, AutomationRemoteTextRange range, AutomationRemoteTextPatternRangeEndpoint targetEndPoint);
        void ExpandToEnclosingUnit(AutomationRemoteTextUnit TextUnit);
        AutomationRemoteTextRange FindAttribute(AutomationRemoteTextAttributeId attr, AutomationRemoteObject val, AutomationRemoteBool backward);
        AutomationRemoteTextRange FindText(AutomationRemoteString text, AutomationRemoteBool backward, AutomationRemoteBool ignoreCase);
        AutomationRemoteAnyObject GetAttributeValue(AutomationRemoteTextAttributeId attr);
        AutomationRemoteArray GetBoundingRectangles();
        AutomationRemoteElement GetEnclosingElement();
        AutomationRemoteString GetText(AutomationRemoteInt maxLength);
        AutomationRemoteInt Move(AutomationRemoteTextUnit unit, AutomationRemoteInt count);
        AutomationRemoteInt MoveEndpointByUnit(AutomationRemoteTextPatternRangeEndpoint endpoint, AutomationRemoteTextUnit unit, AutomationRemoteInt count);
        void MoveEndpointByRange(AutomationRemoteTextPatternRangeEndpoint srcEndPoint, AutomationRemoteTextRange range, AutomationRemoteTextPatternRangeEndpoint targetEndPoint);
        void Select();
        void AddToSelection();
        void RemoveFromSelection();
        void ScrollIntoView(AutomationRemoteBool alignToTop);
        AutomationRemoteArray GetChildren();
        void ShowContextMenu();
    };

    runtimeclass AutomationRemoteConnectionBoundObject : AutomationRemoteExtensionTarget
    {
        void Set(AutomationRemoteConnectionBoundObject rhs);
    };

    runtimeclass AutomationRemoteTextPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextPattern rhs);
        AutomationRemoteTextRange RangeFromPoint(AutomationRemotePoint pt);
        AutomationRemoteTextRange RangeFromChild(AutomationRemoteElement child);
        AutomationRemoteArray GetSelection();
        AutomationRemoteArray GetVisibleRanges();
        AutomationRemoteTextRange GetDocumentRange();
        AutomationRemoteSupportedTextSelection GetSupportedTextSelection();
    };

    runtimeclass AutomationRemoteTogglePattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteTogglePattern rhs);
        AutomationRemoteToggleState GetToggleState();
        void Toggle();
    };

    runtimeclass AutomationRemoteTransformPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteTransformPattern rhs);
        AutomationRemoteBool GetCanMove();
        AutomationRemoteBool GetCanResize();
        AutomationRemoteBool GetCanRotate();
        void Move(AutomationRemoteDouble x, AutomationRemoteDouble y);
        void Resize(AutomationRemoteDouble width, AutomationRemoteDouble height);
        void Rotate(AutomationRemoteDouble degrees);
    };

    runtimeclass AutomationRemoteScrollItemPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteScrollItemPattern rhs);
        void ScrollIntoView();
    };

    runtimeclass AutomationRemoteLegacyIAccessiblePattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteLegacyIAccessiblePattern rhs);
        AutomationRemoteInt GetChildId();
        AutomationRemoteString GetName();
        AutomationRemoteString GetValue();
        AutomationRemoteString GetDescription();
        AutomationRemoteUint GetRole();
        AutomationRemoteUint GetState();
        AutomationRemoteString GetHelp();
        AutomationRemoteString GetKeyboardShortcut();
        AutomationRemoteArray GetSelection();
        AutomationRemoteString GetDefaultAction();
        void Select(AutomationRemoteInt flagsSelect);
        void DoDefaultAction();
        void SetValue(AutomationRemoteString szValue);
    };

    runtimeclass AutomationRemoteItemContainerPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteItemContainerPattern rhs);
        AutomationRemoteElement FindItemByProperty(AutomationRemoteElement pStartAfter, AutomationRemotePropertyId propertyId, AutomationRemoteObject value);
    };

    runtimeclass AutomationRemoteVirtualizedItemPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteVirtualizedItemPattern rhs);
        void Realize();
    };

    runtimeclass AutomationRemoteSynchronizedInputPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteSynchronizedInputPattern rhs);
        void StartListening(AutomationRemoteSynchronizedInputType inputType);
        void Cancel();
    };

    runtimeclass AutomationRemoteAnnotationPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteAnnotationPattern rhs);
        AutomationRemoteAnnotationType GetAnnotationTypeId();
        AutomationRemoteString GetAnnotationTypeName();
        AutomationRemoteString GetAuthor();
        AutomationRemoteString GetDateTime();
        AutomationRemoteElement GetTarget();
    };

    runtimeclass AutomationRemoteTextPattern2 : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextPattern2 rhs);
        AutomationRemoteTextRange RangeFromAnnotation(AutomationRemoteElement annotation);
        AutomationRemoteTextRange GetCaretRange(out AutomationRemoteBool isActive);
    };

    runtimeclass AutomationRemoteStylesPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteStylesPattern rhs);
        AutomationRemoteStyleId GetStyleId();
        AutomationRemoteString GetStyleName();
        AutomationRemoteInt GetFillColor();
        AutomationRemoteString GetFillPatternStyle();
        AutomationRemoteString GetShape();
        AutomationRemoteInt GetFillPatternColor();
        AutomationRemoteString GetExtendedProperties();
    };

    runtimeclass AutomationRemoteSpreadsheetPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteSpreadsheetPattern rhs);
        AutomationRemoteElement GetItemByName(AutomationRemoteString name);
    };

    runtimeclass AutomationRemoteSpreadsheetItemPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteSpreadsheetItemPattern rhs);
        AutomationRemoteString GetFormula();
        AutomationRemoteArray GetAnnotationObjects();
        AutomationRemoteArray GetAnnotationTypes();
    };

    runtimeclass AutomationRemoteTransformPattern2 : AutomationRemoteObject
    {
        void Set(AutomationRemoteTransformPattern2 rhs);
        AutomationRemoteBool GetCanZoom();
        AutomationRemoteDouble GetZoomLevel();
        AutomationRemoteDouble GetZoomMinimum();
        AutomationRemoteDouble GetZoomMaximum();
        void Zoom(AutomationRemoteDouble zoomValue);
        void ZoomByUnit(AutomationRemoteZoomUnit ZoomUnit);
    };

    runtimeclass AutomationRemoteTextChildPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextChildPattern rhs);
        AutomationRemoteElement GetTextContainer();
        AutomationRemoteTextRange GetTextRange();
    };

    runtimeclass AutomationRemoteDragPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteDragPattern rhs);
        AutomationRemoteBool GetIsGrabbed();
        AutomationRemoteString GetDropEffect();
        AutomationRemoteArray GetDropEffects();
        AutomationRemoteArray GetGrabbedItems();
    };

    runtimeclass AutomationRemoteDropTargetPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteDropTargetPattern rhs);
        AutomationRemoteString GetDropTargetEffect();
        AutomationRemoteArray GetDropTargetEffects();
    };

    runtimeclass AutomationRemoteTextEditPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteTextEditPattern rhs);
        AutomationRemoteTextRange GetActiveComposition();
        AutomationRemoteTextRange GetConversionTarget();
    };

    runtimeclass AutomationRemoteCustomNavigationPattern : AutomationRemoteObject
    {
        void Set(AutomationRemoteCustomNavigationPattern rhs);
        AutomationRemoteElement Navigate(AutomationRemoteNavigateDirection direction);
    };

    runtimeclass AutomationRemoteSelectionPattern2 : AutomationRemoteObject
    {
        void Set(AutomationRemoteSelectionPattern2 rhs);
        AutomationRemoteElement GetFirstSelectedItem();
        AutomationRemoteElement GetLastSelectedItem();
        AutomationRemoteElement GetCurrentSelectedItem();
        AutomationRemoteInt GetItemCount();
    };

    partial runtimeclass AutomationRemoteElement : AutomationRemoteObject
    {
        AutomationRemoteArray GetRuntimeId();
        AutomationRemoteInt GetProcessId();
        AutomationRemoteControlType GetControlType();
        AutomationRemoteString GetLocalizedControlType();
        AutomationRemoteString GetName();
        AutomationRemoteString GetAcceleratorKey();
        AutomationRemoteString GetAccessKey();
        AutomationRemoteBool GetHasKeyboardFocus();
        AutomationRemoteBool GetIsKeyboardFocusable();
        AutomationRemoteBool GetIsEnabled();
        AutomationRemoteString GetAutomationId();
        AutomationRemoteString GetClassName();
        AutomationRemoteString GetHelpText();
        AutomationRemoteInt GetCulture();
        AutomationRemoteBool GetIsControlElement();
        AutomationRemoteBool GetIsContentElement();
        AutomationRemoteBool GetIsPassword();
        AutomationRemoteInt GetNativeWindowHandle();
        AutomationRemoteString GetItemType();
        AutomationRemoteBool GetIsOffscreen();
        AutomationRemoteOrientationType GetOrientation();
        AutomationRemoteString GetFrameworkId();
        AutomationRemoteBool GetIsRequiredForForm();
        AutomationRemoteString GetItemStatus();
        AutomationRemoteRect GetBoundingRectangle();
        AutomationRemoteElement GetLabeledBy();
        AutomationRemoteString GetAriaRole();
        AutomationRemoteString GetAriaProperties();
        AutomationRemoteBool GetIsDataValidForForm();
        AutomationRemoteArray GetControllerFor();
        AutomationRemoteArray GetDescribedBy();
        AutomationRemoteArray GetFlowsTo();
        AutomationRemoteString GetProviderDescription();
        AutomationRemoteBool GetOptimizeForVisualContent();
        AutomationRemoteLiveSetting GetLiveSetting();
        AutomationRemoteArray GetFlowsFrom();
        AutomationRemoteBool GetIsPeripheral();
        AutomationRemoteInt GetPositionInSet();
        AutomationRemoteInt GetSizeOfSet();
        AutomationRemoteInt GetLevel();
        AutomationRemoteArray GetAnnotationTypes();
        AutomationRemoteArray GetAnnotationObjects();
        AutomationRemoteLandmarkType GetLandmarkType();
        AutomationRemoteString GetLocalizedLandmarkType();
        AutomationRemoteString GetFullDescription();
        AutomationRemoteHeadingLevel GetHeadingLevel();
        AutomationRemoteBool GetIsDialog();
        AutomationRemoteInvokePattern GetInvokePattern();
        AutomationRemoteSelectionPattern GetSelectionPattern();
        AutomationRemoteValuePattern GetValuePattern();
        AutomationRemoteRangeValuePattern GetRangeValuePattern();
        AutomationRemoteScrollPattern GetScrollPattern();
        AutomationRemoteExpandCollapsePattern GetExpandCollapsePattern();
        AutomationRemoteGridPattern GetGridPattern();
        AutomationRemoteGridItemPattern GetGridItemPattern();
        AutomationRemoteMultipleViewPattern GetMultipleViewPattern();
        AutomationRemoteWindowPattern GetWindowPattern();
        AutomationRemoteSelectionItemPattern GetSelectionItemPattern();
        AutomationRemoteDockPattern GetDockPattern();
        AutomationRemoteTablePattern GetTablePattern();
        AutomationRemoteTableItemPattern GetTableItemPattern();
        AutomationRemoteTextPattern GetTextPattern();
        AutomationRemoteTogglePattern GetTogglePattern();
        AutomationRemoteTransformPattern GetTransformPattern();
        AutomationRemoteScrollItemPattern GetScrollItemPattern();
        AutomationRemoteLegacyIAccessiblePattern GetLegacyIAccessiblePattern();
        AutomationRemoteItemContainerPattern GetItemContainerPattern();
        AutomationRemoteVirtualizedItemPattern GetVirtualizedItemPattern();
        AutomationRemoteSynchronizedInputPattern GetSynchronizedInputPattern();
        AutomationRemoteAnnotationPattern GetAnnotationPattern();
        AutomationRemoteTextPattern2 GetTextPattern2();
        AutomationRemoteStylesPattern GetStylesPattern();
        AutomationRemoteSpreadsheetPattern GetSpreadsheetPattern();
        AutomationRemoteSpreadsheetItemPattern GetSpreadsheetItemPattern();
        AutomationRemoteTransformPattern2 GetTransformPattern2();
        AutomationRemoteTextChildPattern GetTextChildPattern();
        AutomationRemoteDragPattern GetDragPattern();
        AutomationRemoteDropTargetPattern GetDropTargetPattern();
        AutomationRemoteTextEditPattern GetTextEditPattern();
        AutomationRemoteCustomNavigationPattern GetCustomNavigationPattern();
        AutomationRemoteSelectionPattern2 GetSelectionPattern2();
    };

    partial runtimeclass AutomationRemoteAnyObject : AutomationRemoteObject
    {
        AutomationRemoteBool IsInvokePattern();
        AutomationRemoteInvokePattern AsInvokePattern();
        AutomationRemoteBool IsSelectionPattern();
        AutomationRemoteSelectionPattern AsSelectionPattern();
        AutomationRemoteBool IsValuePattern();
        AutomationRemoteValuePattern AsValuePattern();
        AutomationRemoteBool IsRangeValuePattern();
        AutomationRemoteRangeValuePattern AsRangeValuePattern();
        AutomationRemoteBool IsScrollPattern();
        AutomationRemoteScrollPattern AsScrollPattern();
        AutomationRemoteBool IsExpandCollapsePattern();
        AutomationRemoteExpandCollapsePattern AsExpandCollapsePattern();
        AutomationRemoteBool IsGridPattern();
        AutomationRemoteGridPattern AsGridPattern();
        AutomationRemoteBool IsGridItemPattern();
        AutomationRemoteGridItemPattern AsGridItemPattern();
        AutomationRemoteBool IsMultipleViewPattern();
        AutomationRemoteMultipleViewPattern AsMultipleViewPattern();
        AutomationRemoteBool IsWindowPattern();
        AutomationRemoteWindowPattern AsWindowPattern();
        AutomationRemoteBool IsSelectionItemPattern();
        AutomationRemoteSelectionItemPattern AsSelectionItemPattern();
        AutomationRemoteBool IsDockPattern();
        AutomationRemoteDockPattern AsDockPattern();
        AutomationRemoteBool IsTablePattern();
        AutomationRemoteTablePattern AsTablePattern();
        AutomationRemoteBool IsTableItemPattern();
        AutomationRemoteTableItemPattern AsTableItemPattern();
        AutomationRemoteBool IsTextPattern();
        AutomationRemoteTextPattern AsTextPattern();
        AutomationRemoteBool IsTextRange();
        AutomationRemoteTextRange AsTextRange();
        AutomationRemoteConnectionBoundObject AsConnectionBoundObject();
        AutomationRemoteBool IsTogglePattern();
        AutomationRemoteTogglePattern AsTogglePattern();
        AutomationRemoteBool IsTransformPattern();
        AutomationRemoteTransformPattern AsTransformPattern();
        AutomationRemoteBool IsScrollItemPattern();
        AutomationRemoteScrollItemPattern AsScrollItemPattern();
        AutomationRemoteBool IsLegacyIAccessiblePattern();
        AutomationRemoteLegacyIAccessiblePattern AsLegacyIAccessiblePattern();
        AutomationRemoteBool IsItemContainerPattern();
        AutomationRemoteItemContainerPattern AsItemContainerPattern();
        AutomationRemoteBool IsVirtualizedItemPattern();
        AutomationRemoteVirtualizedItemPattern AsVirtualizedItemPattern();
        AutomationRemoteBool IsSynchronizedInputPattern();
        AutomationRemoteSynchronizedInputPattern AsSynchronizedInputPattern();
        AutomationRemoteBool IsAnnotationPattern();
        AutomationRemoteAnnotationPattern AsAnnotationPattern();
        AutomationRemoteBool IsTextPattern2();
        AutomationRemoteTextPattern2 AsTextPattern2();
        AutomationRemoteBool IsStylesPattern();
        AutomationRemoteStylesPattern AsStylesPattern();
        AutomationRemoteBool IsSpreadsheetPattern();
        AutomationRemoteSpreadsheetPattern AsSpreadsheetPattern();
        AutomationRemoteBool IsSpreadsheetItemPattern();
        AutomationRemoteSpreadsheetItemPattern AsSpreadsheetItemPattern();
        AutomationRemoteBool IsTransformPattern2();
        AutomationRemoteTransformPattern2 AsTransformPattern2();
        AutomationRemoteBool IsTextChildPattern();
        AutomationRemoteTextChildPattern AsTextChildPattern();
        AutomationRemoteBool IsDragPattern();
        AutomationRemoteDragPattern AsDragPattern();
        AutomationRemoteBool IsDropTargetPattern();
        AutomationRemoteDropTargetPattern AsDropTargetPattern();
        AutomationRemoteBool IsTextEditPattern();
        AutomationRemoteTextEditPattern AsTextEditPattern();
        AutomationRemoteBool IsCustomNavigationPattern();
        AutomationRemoteCustomNavigationPattern AsCustomNavigationPattern();
        AutomationRemoteBool IsSelectionPattern2();
        AutomationRemoteSelectionPattern2 AsSelectionPattern2();
        AutomationRemoteActiveEnd AsActiveEnd();
        AutomationRemoteAnimationStyle AsAnimationStyle();
        AutomationRemoteAnnotationType AsAnnotationType();
        AutomationRemoteBulletStyle AsBulletStyle();
        AutomationRemoteCapStyle AsCapStyle();
        AutomationRemoteCaretBidiMode AsCaretBidiMode();
        AutomationRemoteCaretPosition AsCaretPosition();
        AutomationRemoteControlType AsControlType();
        AutomationRemoteDockPosition AsDockPosition();
        AutomationRemoteExpandCollapseState AsExpandCollapseState();
        AutomationRemoteFlowDirections AsFlowDirections();
        AutomationRemoteHeadingLevel AsHeadingLevel();
        AutomationRemoteHorizontalTextAlignment AsHorizontalTextAlignment();
        AutomationRemoteLandmarkType AsLandmarkType();
        AutomationRemoteLiveSetting AsLiveSetting();
        AutomationRemoteMetadata AsMetadata();
        AutomationRemoteNavigateDirection AsNavigateDirection();
        AutomationRemoteOrientationType AsOrientationType();
        AutomationRemoteOutlineStyles AsOutlineStyles();
        AutomationRemotePatternId AsPatternId();
        AutomationRemotePropertyId AsPropertyId();
        AutomationRemoteRowOrColumnMajor AsRowOrColumnMajor();
        AutomationRemoteSayAsInterpretAs AsSayAsInterpretAs();
        AutomationRemoteScrollAmount AsScrollAmount();
        AutomationRemoteStyleId AsStyleId();
        AutomationRemoteSupportedTextSelection AsSupportedTextSelection();
        AutomationRemoteSynchronizedInputType AsSynchronizedInputType();
        AutomationRemoteTextAttributeId AsTextAttributeId();
        AutomationRemoteTextDecorationLineStyle AsTextDecorationLineStyle();
        AutomationRemoteTextPatternRangeEndpoint AsTextPatternRangeEndpoint();
        AutomationRemoteTextUnit AsTextUnit();
        AutomationRemoteToggleState AsToggleState();
        AutomationRemoteWindowInteractionState AsWindowInteractionState();
        AutomationRemoteWindowVisualState AsWindowVisualState();
        AutomationRemoteZoomUnit AsZoomUnit();
    };

    runtimeclass AutomationRemoteOperation
    {
        [method_name("NewEnumWithActiveEnd")]
        AutomationRemoteActiveEnd NewEnum(AutomationActiveEnd initialValue);
        [method_name("NewEnumWithAnimationStyle")]
        AutomationRemoteAnimationStyle NewEnum(AutomationAnimationStyle initialValue);
        [method_name("NewEnumWithAnnotationType")]
        AutomationRemoteAnnotationType NewEnum(AutomationAnnotationType initialValue);
        [method_name("NewEnumWithBulletStyle")]
        AutomationRemoteBulletStyle NewEnum(AutomationBulletStyle initialValue);
        [method_name("NewEnumWithCapStyle")]
        AutomationRemoteCapStyle NewEnum(AutomationCapStyle initialValue);
        [method_name("NewEnumWithCaretBidiMode")]
        AutomationRemoteCaretBidiMode NewEnum(AutomationCaretBidiMode initialValue);
        [method_name("NewEnumWithCaretPosition")]
        AutomationRemoteCaretPosition NewEnum(AutomationCaretPosition initialValue);
        [default_overload]
        [method_name("NewEnumWithControlType")]
        AutomationRemoteControlType NewEnum(AutomationControlType initialValue);
        [method_name("NewEnumWithDockPosition")]
        AutomationRemoteDockPosition NewEnum(AutomationDockPosition initialValue);
        [method_name("NewEnumWithExpandCollapseState")]
        AutomationRemoteExpandCollapseState NewEnum(AutomationExpandCollapseState initialValue);
        [method_name("NewEnumWithFlowDirections")]
        AutomationRemoteFlowDirections NewEnum(AutomationFlowDirections initialValue);
        [method_name("NewEnumWithHeadingLevel")]
        AutomationRemoteHeadingLevel NewEnum(AutomationHeadingLevel initialValue);
        [method_name("NewEnumWithHorizontalTextAlignment")]
        AutomationRemoteHorizontalTextAlignment NewEnum(AutomationHorizontalTextAlignment initialValue);
        [method_name("NewEnumWithLandmarkType")]
        AutomationRemoteLandmarkType NewEnum(AutomationLandmarkType initialValue);
        [method_name("NewEnumWithLiveSetting")]
        AutomationRemoteLiveSetting NewEnum(AutomationLiveSetting initialValue);
        [method_name("NewEnumWithMetadata")]
        AutomationRemoteMetadata NewEnum(AutomationMetadata initialValue);
        [method_name("NewEnumWithNavigateDirection")]
        AutomationRemoteNavigateDirection NewEnum(AutomationNavigateDirection initialValue);
        [method_name("NewEnumWithOrientationType")]
        AutomationRemoteOrientationType NewEnum(AutomationOrientationType initialValue);
        [method_name("NewEnumWithOutlineStyles")]
        AutomationRemoteOutlineStyles NewEnum(AutomationOutlineStyles initialValue);
        [method_name("NewEnumWithPatternId")]
        AutomationRemotePatternId NewEnum(AutomationPatternId initialValue);
        [method_name("NewEnumWithPropertyId")]
        AutomationRemotePropertyId NewEnum(AutomationPropertyId initialValue);
        [method_name("NewEnumWithRowOrColumnMajor")]
        AutomationRemoteRowOrColumnMajor NewEnum(AutomationRowOrColumnMajor initialValue);
        [method_name("NewEnumWithSayAsInterpretAs")]
        AutomationRemoteSayAsInterpretAs NewEnum(AutomationSayAsInterpretAs initialValue);
        [method_name("NewEnumWithScrollAmount")]
        AutomationRemoteScrollAmount NewEnum(AutomationScrollAmount initialValue);
        [method_name("NewEnumWithStyleId")]
        AutomationRemoteStyleId NewEnum(AutomationStyleId initialValue);
        [method_name("NewEnumWithSupportedTextSelection")]
        AutomationRemoteSupportedTextSelection NewEnum(AutomationSupportedTextSelection initialValue);
        [method_name("NewEnumWithSynchronizedInputType")]
        AutomationRemoteSynchronizedInputType NewEnum(AutomationSynchronizedInputType initialValue);
        [method_name("NewEnumWithTextAttributeId")]
        AutomationRemoteTextAttributeId NewEnum(AutomationTextAttributeId initialValue);
        [method_name("NewEnumWithTextDecorationLineStyle")]
        AutomationRemoteTextDecorationLineStyle NewEnum(AutomationTextDecorationLineStyle initialValue);
        [method_name("NewEnumWithTextPatternRangeEndpoint")]
        AutomationRemoteTextPatternRangeEndpoint NewEnum(AutomationTextPatternRangeEndpoint initialValue);
        [method_name("NewEnumWithTextUnit")]
        AutomationRemoteTextUnit NewEnum(AutomationTextUnit initialValue);
        [method_name("NewEnumWithToggleState")]
        AutomationRemoteToggleState NewEnum(AutomationToggleState initialValue);
        [method_name("NewEnumWithWindowInteractionState")]
        AutomationRemoteWindowInteractionState NewEnum(AutomationWindowInteractionState initialValue);
        [method_name("NewEnumWithWindowVisualState")]
        AutomationRemoteWindowVisualState NewEnum(AutomationWindowVisualState initialValue);
        [method_name("NewEnumWithZoomUnit")]
        AutomationRemoteZoomUnit NewEnum(AutomationZoomUnit initialValue);

        AutomationRemoteOperation();

        AutomationRemoteBool NewBool(Boolean initialValue);
        AutomationRemoteInt NewInt(Int32 initialValue);
        AutomationRemoteUint NewUint(UInt32 initialValue);
        AutomationRemoteDouble NewDouble(Double initialValue);
        AutomationRemoteChar NewChar(Char initialValue);
        AutomationRemoteString NewString(String initialValue);
        AutomationRemotePoint NewPoint(Windows.Foundation.Point initialValue);
        AutomationRemoteRect NewRect(Windows.Foundation.Rect initialValue);
        Boolean IsGuidSupported();
        AutomationRemoteGuid NewGuid(Guid initialValue);
        Boolean IsCacheRequestSupported();
        AutomationRemoteCacheRequest NewCacheRequest();
        AutomationRemoteArray NewArray();
        AutomationRemoteStringMap NewStringMap();
        AutomationRemoteAnyObject NewNull();
        AutomationRemoteAnyObject NewEmpty();
        AutomationRemoteByteArray NewByteArray(byte[] initialValue);

        Boolean IsOpcodeSupported(UInt32 opcode);

        AutomationRemoteElement ImportElement(Windows.UI.UIAutomation.AutomationElement element);
        AutomationRemoteTextRange ImportTextRange(Windows.UI.UIAutomation.AutomationTextRange textRange);

        AutomationRemoteOperationResponseToken RequestResponse(AutomationRemoteObject object);

        [default_overload] void IfBlock(AutomationRemoteBool condition, AutomationRemoteOperationScopeHandler trueHandler);
        void IfBlock(
            AutomationRemoteBool condition,
            AutomationRemoteOperationScopeHandler trueHandler,
            AutomationRemoteOperationScopeHandler falseHandler);

        [default_overload] void WhileBlock(AutomationRemoteBool condition, AutomationRemoteOperationScopeHandler loopBodyHandler);
        void WhileBlock(AutomationRemoteBool condition,
            AutomationRemoteOperationScopeHandler loopBodyHandler,
            AutomationRemoteOperationScopeHandler loopConditionUpdateHandler);
        void BreakLoop();
        void ContinueLoop();

        [default_overload]
        void TryBlock(
            AutomationRemoteOperationScopeHandler tryBlockHandler);

        [method_name("TryBlockWithExceptBlock")]
        void TryBlock(
            AutomationRemoteOperationScopeHandler tryBlockHandler,
            AutomationRemoteOperationScopeHandler exceptBlockHandler);

        AutomationRemoteInt GetCurrentFailureCode();

        [default_overload]
        void ReturnOperationStatus(HRESULT status);
        [method_name("ReturnOperationStatusWithRemoteInt")]
        void ReturnOperationStatus(AutomationRemoteInt status);

        AutomationRemoteOperationResultSet Execute();

        AutomationRemoteConnectionBoundObject ImportConnectionBoundObject(Windows.UI.UIAutomation.AutomationConnectionBoundObject connectionBoundObject);
    }
}
